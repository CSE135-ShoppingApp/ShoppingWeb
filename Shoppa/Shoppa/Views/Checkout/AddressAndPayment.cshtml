@model Shoppa.Models.Order

@{
    ViewBag.Title = "Review, Address And Payment";
}

<h2>Review, Address And Payment</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-horizontal">
        <h4>Products</h4>

        <table class="table">
            <tr>
                <th>
                    Product
                </th>
                <th>
                    Price (each)
                </th>
                <th>
                    Quantity
                </th>
            </tr>

            @foreach (var item in (ViewBag.Cart as Shoppa.ViewModels.ShoppingCartViewModel).CartItems)
            {
                <tr id="row-@item.ID">
                    <td>
                        @Html.ActionLink(item.Product.Name, "Details", "Store", new { id = item.ProductID }, null)

                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Price)


                    </td>
                    <td id="item-count-@item.ID">

                        @Html.DisplayFor(modelItem => item.Count)

                    </td>
                  

                </tr>
            }
            <tr>
                <td>
                    Total
                </td>
                <td></td>
                <td id="cart-total">
                    $@((ViewBag.Cart as Shoppa.ViewModels.ShoppingCartViewModel).CartTotal)
                </td>
        </table>
    </div>
    
    <div class="form-horizontal">
        <h4>Shipping Information</h4>
        <hr />
        @Html.HiddenFor(model => model.ID)
 
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.State, new { @class = "col-md-2 control-label" })
       
            <div class="col-md-10">
                @Html.EnumDropDownListFor(m => m.State, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

       


        <div class="form-group">
            <h4>Payment</h4>
            <hr />


            <div class="form-group">
                @Html.LabelFor(model => model.CreditCard, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreditCard, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreditCard, "", new { @class = "text-danger" })
                </div>
            </div>

                      <!--  <p>
                We're running a promotion: all is free
                with the promo code: "FREE"
            </p>
            

                @Html.Label("Promo Code", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("PromoCode", "", new { @class = "form-control" })

            </div>

                          -->
            </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
