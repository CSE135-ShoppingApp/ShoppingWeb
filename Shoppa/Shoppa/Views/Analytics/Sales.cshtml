@model Shoppa.Models.Data


@{
    ViewBag.Title = "Sales";
    var rowCriteria = ViewBag.RowsCriteria;
    var currPage = ViewBag.CurrentPage;
    var currCol = ViewBag.CurrentColumn;

}

<h2>Sales</h2>

<p>
    @using (Html.BeginForm("Sales", "Analytics", FormMethod.Post, new { @class = "form-inline" }))
    {
        @Html.Hidden("CurrentPage", (object)@currPage.ToString())
        @Html.Hidden("CurrentColumn", (object)@currCol.ToString())
        <div>
            @Html.Label("Rows")
            @if (ViewBag.ReadOnly ?? false) {
                @Html.DropDownList("RowsMenu", null, new { @class = "form-control",  @disabled = "true"})
            } else {
                @Html.DropDownList("RowsMenu", null, new { @class = "form-control" })
            }
        </div>
        <br />
        <div>

            @Html.Label("Order")
            @if (ViewBag.ReadOnly ?? false)
            {
                @Html.DropDownList("OrderMenu", null, new { @class = "form-control", @disabled = "true" })
            }
            else
            {
                @Html.DropDownList("OrderMenu", null, new { @class = "form-control" })
            }
        </div>
        <br />
        <div>
            @Html.Label("Product Category")
            @if (ViewBag.ReadOnly ?? false)
            {
                @Html.DropDownList("ProductCategories", null, "All", new { @class = "form-control", @disabled = "true" })
            }
            else
            {
                @Html.DropDownList("ProductCategories", null, "All", new { @class = "form-control" })
            }
        </div>
        <br />
        <input type="submit" name="Button" value="Run Query" class="btn btn-default" />
    if (ViewBag.ShowNextPage ?? true) {

        <input type="submit" name="Button" value="Next 20 @rowCriteria" class="btn btn-default" />
    }
    if (ViewBag.ShowNextCol ?? false) {

    <input type="submit" name="Button" value="Next 10 Products" class="btn btn-default" />
    }
    }
</p>


<table class="table">
    <tr>
        @foreach (var field in Model.Fields)
    {
            <th>
                @Html.DisplayFor(modelItem => field)
            </th>
}

    </tr>
   

    @foreach (var row in Model.Rows)
    {
        int rowN = 1;


        <tr>
            @foreach (var val in row.Values)
    {


                <td>
                    @if(rowN == 1)
                {
                
                        <text><strong></text>
                            }

                            @Html.DisplayFor(modelItem => val)
                   
                            @if (rowN == 1)
                            {
                                Html.Raw("<text></strong></text>");
                                rowN++;
                            }
</td>
}
              
                </tr>


         }

        </table>